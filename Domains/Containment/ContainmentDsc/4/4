//======
// SEED
//======
//
// seed number
//
// The seed statement sets the random number seed.  The default is
// -1

seed 3


//======
// TIME
//======
//
// time accel_rate
//
// DEPRECATED.  This statement is ignored.

//======
// TIMEOUT
//======
//
// timeout time
//
// The timeout statement indicates when the simulation will terminate in
// milliseconds.  The program automatically terminates when this time
// is reached.  If no timeout statement is given, the default is no
// termination.  NOTE: you *must* use a timeout with a trials statement.
//
// timeout 10000 // ten seconds


//======
// TRIALS
//======
//
// trials num_trials
//
// The trials statement indicates that the simulation should be run
// a certain number of times.  Each trial automatically terminates when the
// timeout time is reached, then a new trial is begun.  Note: certain hooks
// are available in the ControlSystem class for you to know when trials
// begin and end.  See the javadoc documentation.
//
// trials 100 // 100 trials


//======
// MAX TIME STEP
//======
//
// maxtimestep milliseconds
//
// DEPRECATED.  This statement is processed as if it were a "timestep" statment.


//======
// TIMESTEP
//======
//
// timestep milliseconds
//
// timestep statements set the time (in milliseconds) transpices
// between discrete simulation steps.

timestep 100 // 1/10th of a second

//======
// WINDOWSIZE
//======
//
// windowsize width height
//
// The windowsize statement gives a default window size.  This can be
// overridden on the command line.

windowsize 500 500


//======
// BACKGROUND COLOR
//======
//
// background color
//
// A background statement sets the background color for the simulation.
// The color must be given in hex format as "xRRGGBB" where RR indicates
// the red component (00 for none, FF for full), GG is the green component,
// and BB is the blue.  Here we use white:

background xFFFFFF


//======
// ROBOTS
//======
//
// robot robottype controlsystem x y theta forecolor backcolor
//              visionclass
//
// robot statements cause a robot with a control system to be instantiated
// in the simulation.  Be sure to include the full class name for the
// abstract robot type and your control system.  The x y and theta
// parameters set the initial position of the robot in the field.
// You can used different colors to tell robots apart from one another.
// The visionclass indicates which color the robots see each other as.



robot EDU.gatech.cc.is.abstractrobot.MultiForageN150Sim
	containment 13.785430072655778 10.885827970937688 1.1902899496825317 x000000 xFF0000 2 1.1902899496825317 1 0
robot EDU.gatech.cc.is.abstractrobot.MultiForageN150Sim
	containment 18.427813527082073 9.02887458916717 1.1902899496825317 x000000 xFF0000 2 1.1902899496825317 2 0
robot EDU.gatech.cc.is.abstractrobot.MultiForageN150Sim
	containment 22.761419542320777 11.522839084641554 2.677945044588987 x000000 xFF0000 2 2.677945044588987 1 0
robot EDU.gatech.cc.is.abstractrobot.MultiForageN150Sim
	containment 24.997487519820567 15.994975039641133 2.677945044588987 x000000 xFF0000 2 2.677945044588987 2 0
robot EDU.gatech.cc.is.abstractrobot.MultiForageN150Sim
	containment 22.730982949508142 20.451762787868894 4.068887871591405 x000000 xFF0000 2 4.068887871591405 1 0
robot EDU.gatech.cc.is.abstractrobot.MultiForageN150Sim
	containment 18.730982949508142 23.451762787868894 4.068887871591405 x000000 xFF0000 2 4.068887871591405 2 0
robot EDU.gatech.cc.is.abstractrobot.MultiForageN150Sim
	containment 15.469478122039485 19.661962494924833 5.755110858753227 x000000 xFF0000 2 5.755110858753227 1 0
robot EDU.gatech.cc.is.abstractrobot.MultiForageN150Sim
	containment 12.950122994419054 15.343067990432665 5.755110858753227 x000000 xFF0000 2 5.755110858753227 2 0
robot EDU.gatech.cc.is.abstractrobot.MultiForageN150Sim
	containment 10.430767866798623 11.024173485940498 5.755110858753227 x000000 xFF0000 2 5.755110858753227 3 0

bounds -19.569232133201375 54.99748751982057 -20.97112541083283 63.451762787868894 